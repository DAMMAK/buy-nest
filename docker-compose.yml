# docker-compose.yml

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - 'discovery.type=single-node'
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'

  api-gateway:
    build: ./apps/api-gateway
    ports:
      - '3000:3000'
    depends_on:
      - kafka
      - user-service
      - product-service
      - cart-service
      - order-service
      - payment-service
      - notification-service
    environment:
      KAFKA_BROKER: kafka:29092
      NODE_ENV: development

  user-service:
    build: ./apps/user-service
    depends_on:
      - kafka
      - user-db
    environment:
      KAFKA_BROKER: kafka:29092
      DB_HOST: user-db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: user_service
      JWT_SECRET: your-secret-key
      NODE_ENV: development

  user-db:
    image: postgres:13
    volumes:
      - user_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: user_service
    ports:
      - '5432:5432'

  product-service:
    build: ./apps/product-service
    depends_on:
      - kafka
      - product-db
    environment:
      KAFKA_BROKER: kafka:29092
      DB_HOST: product-db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: product_service
      NODE_ENV: development

  product-db:
    image: postgres:13
    volumes:
      - product_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: product_service

  cart-service:
    build: ./apps/cart-service
    depends_on:
      - kafka
      - cart-db
    environment:
      KAFKA_BROKER: kafka:29092
      REDIS_HOST: cart-db
      REDIS_PORT: 6379
      NODE_ENV: development

  cart-db:
    image: redis:alpine
    volumes:
      - cart_data:/data

  order-service:
    build: ./apps/order-service
    depends_on:
      - kafka
      - order-db
    environment:
      KAFKA_BROKER: kafka:29092
      DB_HOST: order-db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: order_service
      NODE_ENV: development

  order-db:
    image: postgres:13
    volumes:
      - order_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: order_service

  payment-service:
    build: ./apps/payment-service
    depends_on:
      - kafka
      - payment-db
    environment:
      KAFKA_BROKER: kafka:29092
      DB_HOST: payment-db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: payment_service
      STRIPE_SECRET_KEY: your-stripe-secret-key
      NODE_ENV: development

  payment-db:
    image: postgres:13
    volumes:
      - payment_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: payment_service

  notification-service:
    build: ./apps/notification-service
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:29092
      SENDGRID_API_KEY: your-sendgrid-api-key
      TWILIO_ACCOUNT_SID: your-twilio-account-sid
      TWILIO_AUTH_TOKEN: your-twilio-auth-token
      TWILIO_PHONE_NUMBER: your-twilio-phone-number
      NODE_ENV: development

volumes:
  user_data:
  product_data:
  cart_data:
  order_data:
  payment_data:
  elasticsearch-data:
